# Generated by Django 4.2.20 on 2025-08-22 10:23

import core.utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('incidents', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailErr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_msg_id', models.CharField(max_length=256, unique=True, verbose_name='ID сообщения')),
                ('incert_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время добавления')),
            ],
            options={
                'verbose_name': 'ошибка при обработки письма',
                'verbose_name_plural': 'Ошибки обработки писем',
            },
        ),
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_msg_id', models.CharField(max_length=256, unique=True, verbose_name='ID сообщения')),
                ('email_msg_reply_id', models.CharField(blank=True, db_index=True, max_length=256, null=True, verbose_name='ID ответа на сообщение')),
                ('email_subject', models.CharField(blank=True, db_index=True, max_length=512, null=True, verbose_name='Тема письма')),
                ('email_from', models.CharField(db_index=True, max_length=256, verbose_name='Адрес отправителя')),
                ('email_date', models.DateTimeField(db_index=True, verbose_name='Дата и время получения письма')),
                ('email_body', models.TextField(blank=True, null=True, verbose_name='Тело письма')),
                ('is_first_email', models.BooleanField(db_index=True, verbose_name='Является ли первым письмом в переписке')),
                ('is_email_from_yandex_tracker', models.BooleanField(blank=True, null=True, verbose_name='Было ли письмо отправлено из YandexTracker')),
                ('was_added_2_yandex_tracker', models.BooleanField(blank=True, null=True, verbose_name='Было ли письмо добавлено в YandexTracker')),
                ('email_incident', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_messages', to='incidents.incident', verbose_name='Номер инцидента')),
            ],
            options={
                'verbose_name': 'сообщение',
                'verbose_name_plural': 'Почта',
            },
        ),
        migrations.CreateModel(
            name='EmailToCC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_to', models.EmailField(max_length=32, verbose_name='Адрес получателя')),
                ('email_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_msg_cc', to='emails.emailmessage', verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'Получатель (в копии) email',
                'verbose_name_plural': 'Получатели (в копии) email',
            },
        ),
        migrations.CreateModel(
            name='EmailTo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_to', models.EmailField(max_length=32, verbose_name='Адрес получателя')),
                ('email_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_msg_to', to='emails.emailmessage', verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'Получатель email',
                'verbose_name_plural': 'Получатели email',
            },
        ),
        migrations.CreateModel(
            name='EmailReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_msg_references', models.CharField(max_length=256, verbose_name='Ссылка на другие сообщения')),
                ('email_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_references', to='emails.emailmessage', verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'ссылка на email',
                'verbose_name_plural': 'Ссылки на email',
            },
        ),
        migrations.CreateModel(
            name='EmailInTextAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_url', models.FileField(max_length=512, upload_to=core.utils.attachment_upload_to, verbose_name='Ссылка на файл')),
                ('email_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_intext_attachments', to='emails.emailmessage', verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'вложение в тексте email',
                'verbose_name_plural': 'Вложения в тексте email',
            },
        ),
        migrations.CreateModel(
            name='EmailAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_url', models.FileField(max_length=512, upload_to=core.utils.attachment_upload_to, verbose_name='Ссылка на файл')),
                ('email_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_attachments', to='emails.emailmessage', verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'вложение email',
                'verbose_name_plural': 'Вложения email',
            },
        ),
        migrations.AddConstraint(
            model_name='emailtocc',
            constraint=models.UniqueConstraint(fields=('email_msg', 'email_to'), name='unique_email_to_cc'),
        ),
        migrations.AddConstraint(
            model_name='emailto',
            constraint=models.UniqueConstraint(fields=('email_msg', 'email_to'), name='unique_email_to'),
        ),
        migrations.AddConstraint(
            model_name='emailreference',
            constraint=models.UniqueConstraint(fields=('email_msg', 'email_msg_references'), name='unique_email_reference'),
        ),
        migrations.AddConstraint(
            model_name='emailintextattachment',
            constraint=models.UniqueConstraint(fields=('email_msg', 'file_url'), name='unique_email_intext_attachment'),
        ),
        migrations.AddConstraint(
            model_name='emailattachment',
            constraint=models.UniqueConstraint(fields=('email_msg', 'file_url'), name='unique_email_attachment'),
        ),
    ]
