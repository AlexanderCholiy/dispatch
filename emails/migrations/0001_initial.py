# Generated by Django 4.2.20 on 2025-08-20 08:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailErr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_msg_id', models.CharField(max_length=256, unique=True, verbose_name='ID сообщения')),
                ('incert_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время добавления')),
            ],
            options={
                'verbose_name': 'ошибка при обработки письма',
                'verbose_name_plural': 'Ошибки обработки писем',
            },
        ),
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_msg_id', models.CharField(max_length=256, unique=True, verbose_name='ID сообщения')),
                ('email_msg_reply_id', models.CharField(blank=True, db_index=True, max_length=256, null=True, verbose_name='ID ответа на сообщение')),
                ('email_subject', models.CharField(blank=True, db_index=True, max_length=512, null=True, verbose_name='Тема письма')),
                ('email_from', models.CharField(db_index=True, max_length=256, verbose_name='Адрес отправителя')),
                ('email_date', models.DateTimeField(db_index=True, verbose_name='Дата и время получения письма')),
                ('email_body', models.TextField(blank=True, null=True, verbose_name='Тело письма')),
                ('is_first_email', models.BooleanField(db_index=True, verbose_name='Является ли первым письмом в переписке')),
                ('is_email_from_yandex_tracker', models.BooleanField(blank=True, null=True, verbose_name='Было ли письмо отправлено из YandexTracker')),
                ('was_added_2_yandex_tracker', models.BooleanField(blank=True, null=True, verbose_name='Было ли письмо добавлено в YandexTracker')),
            ],
            options={
                'verbose_name': 'сообщение',
                'verbose_name_plural': 'Почта',
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата и время добавления')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Дата и время редактирования')),
                ('incident_date', models.DateTimeField(db_index=True, verbose_name='Дата и время регистрации инцидента')),
                ('track_sla', models.BooleanField(db_index=True, default=True, verbose_name='Отслеживать SLA')),
                ('is_email_incident', models.BooleanField(db_index=True, verbose_name='Инцидент был зарегестрирован из почты')),
                ('base_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents', to='ts.basestation', verbose_name='Базовая станция')),
            ],
            options={
                'verbose_name': 'инцидент',
                'verbose_name_plural': 'Инциденты',
            },
        ),
        migrations.CreateModel(
            name='IncidentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='Название')),
                ('description', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'статус инцидента',
                'verbose_name_plural': 'Статусы инцидентов',
            },
        ),
        migrations.CreateModel(
            name='IncidentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='Название')),
                ('description', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Описание')),
                ('sla_deadline', models.IntegerField(blank=True, null=True, verbose_name='Срок устранения аварии (мин)')),
                ('is_avr_incident', models.BooleanField(verbose_name='Можно ли этот инцидент назначить подрядчику')),
            ],
            options={
                'verbose_name': 'тип инцидента',
                'verbose_name_plural': 'Типы инцидентов',
            },
        ),
        migrations.CreateModel(
            name='IncidentStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insert_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата и время добавления')),
                ('incident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='emails.incident')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='emails.incidentstatus')),
            ],
            options={
                'verbose_name': 'история статусов инцидента',
                'verbose_name_plural': 'История статусов инцидентов',
                'unique_together': {('incident', 'status', 'insert_date')},
            },
        ),
        migrations.AddField(
            model_name='incident',
            name='incident_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents', to='emails.incidenttype', verbose_name='Тип инцидента'),
        ),
        migrations.AddField(
            model_name='incident',
            name='pole',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents', to='ts.pole', verbose_name='Связанная опора'),
        ),
        migrations.AddField(
            model_name='incident',
            name='responsible_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidents', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный пользователь'),
        ),
        migrations.AddField(
            model_name='incident',
            name='statuses',
            field=models.ManyToManyField(blank=True, related_name='incidents', through='emails.IncidentStatusHistory', to='emails.incidentstatus', verbose_name='Статус инцидента'),
        ),
        migrations.CreateModel(
            name='EmailToCC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_to', models.EmailField(max_length=32, verbose_name='Адрес получателя')),
                ('email_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_msg_cc', to='emails.emailmessage', verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'Получатель (в копии) email',
                'verbose_name_plural': 'Получатели (в копии) email',
            },
        ),
        migrations.CreateModel(
            name='EmailTo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_to', models.EmailField(max_length=32, verbose_name='Адрес получателя')),
                ('email_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_msg_to', to='emails.emailmessage', verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'Получатель email',
                'verbose_name_plural': 'Получатели email',
            },
        ),
        migrations.CreateModel(
            name='EmailReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_msg_references', models.CharField(max_length=256, verbose_name='Ссылка на другие сообщения')),
                ('email_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_references', to='emails.emailmessage', verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'ссылка на email',
                'verbose_name_plural': 'Ссылки на email',
            },
        ),
        migrations.AddField(
            model_name='emailmessage',
            name='email_incident',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_messages', to='emails.incident', verbose_name='Номер инцидента'),
        ),
        migrations.CreateModel(
            name='EmailInTextAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=256, verbose_name='Имя файла')),
                ('file_url', models.URLField(blank=True, max_length=512, null=True, verbose_name='Ссылка на файл')),
                ('email_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_intext_attachments', to='emails.emailmessage', verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'вложение в тексте email',
                'verbose_name_plural': 'Вложения в тексте email',
            },
        ),
        migrations.CreateModel(
            name='EmailAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=256, verbose_name='Имя файла')),
                ('file_url', models.URLField(blank=True, max_length=512, null=True, verbose_name='Ссылка на файл')),
                ('email_msg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_attachments', to='emails.emailmessage', verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'вложение email',
                'verbose_name_plural': 'Вложения email',
            },
        ),
        migrations.AddConstraint(
            model_name='emailtocc',
            constraint=models.UniqueConstraint(fields=('email_msg', 'email_to'), name='unique_email_to_cc'),
        ),
        migrations.AddConstraint(
            model_name='emailto',
            constraint=models.UniqueConstraint(fields=('email_msg', 'email_to'), name='unique_email_to'),
        ),
        migrations.AddConstraint(
            model_name='emailreference',
            constraint=models.UniqueConstraint(fields=('email_msg', 'email_msg_references'), name='unique_email_reference'),
        ),
        migrations.AddConstraint(
            model_name='emailintextattachment',
            constraint=models.UniqueConstraint(fields=('email_msg', 'file_name'), name='unique_email_intext_attachment'),
        ),
        migrations.AddConstraint(
            model_name='emailattachment',
            constraint=models.UniqueConstraint(fields=('email_msg', 'file_name'), name='unique_email_attachment'),
        ),
    ]
