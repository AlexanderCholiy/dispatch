openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/incidents/:
    get:
      operationId: listIncidents
      description: "\u0412\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043F\
        \u043E\u0434\u0440\u043E\u0431\u043D\u0443\u044E \u0438\u043D\u0444\u043E\u0440\
        \u043C\u0430\u0446\u0438\u0438 \u043F\u043E \u0438\u043D\u0446\u0438\u0434\
        \u0435\u043D\u0442\u0430\u043C.\n\n\u0414\u043E\u0441\u0442\u0443\u043F\u043D\
        \u0430 \u0444\u0438\u043B\u044C\u0442\u0440\u0430\u0446\u0438\u044F \u043F\
        \u043E \u0434\u0430\u0442\u0435 \u0438\u043D\u0446\u0438\u0434\u0435\u043D\
        \u0442\u0430 \u043D\u0430\u0447\u0438\u043D\u0430\u044F \u0441 \u043F\u0435\
        \u0440\u0432\u043E\u0433\u043E \u0447\u0438\u0441\u043B\u0430 \u043F\u0440\
        \u0435\u0434\u044B\u0434\u0443\u0449\u0435\u0433\u043E\n\u043C\u0435\u0441\
        \u044F\u0446\u0430 \u043F\u043E \u0442\u0435\u043A\u0443\u0449\u0435\u0435\
        \ \u0447\u0438\u0441\u043B\u043E. GET: api/v1/incidents/?last_month=true"
      parameters:
      - name: incident_date
        required: false
        in: query
        description: incident_date
        schema:
          type: string
      - name: last_month
        required: false
        in: query
        description: last_month
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Incident'
          description: ''
      tags:
      - api
  /api/v1/incidents/{id}/:
    get:
      operationId: retrieveIncident
      description: "\u0412\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043F\
        \u043E\u0434\u0440\u043E\u0431\u043D\u0443\u044E \u0438\u043D\u0444\u043E\u0440\
        \u043C\u0430\u0446\u0438\u0438 \u043F\u043E \u0438\u043D\u0446\u0438\u0434\
        \u0435\u043D\u0442\u0430\u043C.\n\n\u0414\u043E\u0441\u0442\u0443\u043F\u043D\
        \u0430 \u0444\u0438\u043B\u044C\u0442\u0440\u0430\u0446\u0438\u044F \u043F\
        \u043E \u0434\u0430\u0442\u0435 \u0438\u043D\u0446\u0438\u0434\u0435\u043D\
        \u0442\u0430 \u043D\u0430\u0447\u0438\u043D\u0430\u044F \u0441 \u043F\u0435\
        \u0440\u0432\u043E\u0433\u043E \u0447\u0438\u0441\u043B\u0430 \u043F\u0440\
        \u0435\u0434\u044B\u0434\u0443\u0449\u0435\u0433\u043E\n\u043C\u0435\u0441\
        \u044F\u0446\u0430 \u043F\u043E \u0442\u0435\u043A\u0443\u0449\u0435\u0435\
        \ \u0447\u0438\u0441\u043B\u043E. GET: api/v1/incidents/?last_month=true"
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u0438\u043D\u0446\u0438\
          \u0434\u0435\u043D\u0442."
        schema:
          type: string
      - name: incident_date
        required: false
        in: query
        description: incident_date
        schema:
          type: string
      - name: last_month
        required: false
        in: query
        description: last_month
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
          description: ''
      tags:
      - api
  /api/v1/auth/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/v1/auth/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/auth/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/auth/users/activation/:
    post:
      operationId: activationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/v1/auth/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_email/:
    post:
      operationId: resetUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_email_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/auth/users/set_password/:
    post:
      operationId: setPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/v1/auth/users/set_email/:
    post:
      operationId: setUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/v1/auth/jwt/create/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/v1/auth/jwt/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/v1/auth/jwt/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
components:
  schemas:
    Incident:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          nullable: true
          description: "\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\
            \u0441\u044F \u0432 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043A\u0430\
            \u0445 \u043F\u0438\u0441\u0435\u043C"
          maxLength: 32
        base_station:
          type: string
          readOnly: true
        incident_type:
          type: string
          readOnly: true
        incident_datetime:
          type: string
          readOnly: true
        pole:
          type: string
          readOnly: true
        pole_latitude:
          type: number
          readOnly: true
        pole_longtitude:
          type: number
          readOnly: true
        is_auto_incident:
          type: boolean
        address:
          type: string
          readOnly: true
        region:
          type: string
          readOnly: true
        registration_method:
          type: string
          readOnly: true
        last_status:
          type: string
          readOnly: true
        is_transfer_to_avr:
          type: string
          readOnly: true
        transfer_timestamp_to_avr:
          type: string
          readOnly: true
        vendor:
          type: string
          readOnly: true
        vendor_emails:
          type: string
          readOnly: true
        operators:
          type: string
          readOnly: true
        deadline:
          type: string
          readOnly: true
        is_sla_expired:
          type: string
          readOnly: true
        is_incident_finish:
          type: boolean
        incident_finish_datetime:
          type: string
          readOnly: true
    User:
      type: object
      properties:
        username:
          type: string
          description: "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\
            \u0430\u0442\u0435\u043B\u044F \u0434\u043E\u043B\u0436\u043D\u043E \u0441\
            \u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u043C\u0438\u043D\u0438\
            \u043C\u0443\u043C 4 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432\
            . \u0414\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0435 \u0441\u0438\
            \u043C\u0432\u043E\u043B\u044B: \u043B\u0430\u0442\u0438\u043D\u0441\u043A\
            \u0438\u0435 \u0431\u0443\u043A\u0432\u044B, \u0446\u0438\u0444\u0440\u044B\
            \ \u0438 .-_\u0414\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B \u0441\
            \ YandexTracker \u0438\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\
            \u0432\u0430\u0442\u0435\u043B\u044F \u0434\u043E\u043B\u0436\u043D\u043E\
            \ \u0431\u044B\u0442\u044C \u0442\u0430\u043A\u0438\u043C \u0436\u0435\
            ."
          pattern: ^[a-zA-Z0-9._-]+$
          maxLength: 150
          minLength: 4
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\
            \u0435\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\
            \u0439 \u043F\u043E\u0447\u0442\u044B"
      required:
      - username
    UserCreate:
      type: object
      properties:
        username:
          type: string
          description: "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\
            \u0430\u0442\u0435\u043B\u044F \u0434\u043E\u043B\u0436\u043D\u043E \u0441\
            \u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u043C\u0438\u043D\u0438\
            \u043C\u0443\u043C 4 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432\
            . \u0414\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0435 \u0441\u0438\
            \u043C\u0432\u043E\u043B\u044B: \u043B\u0430\u0442\u0438\u043D\u0441\u043A\
            \u0438\u0435 \u0431\u0443\u043A\u0432\u044B, \u0446\u0438\u0444\u0440\u044B\
            \ \u0438 .-_\u0414\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B \u0441\
            \ YandexTracker \u0438\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\
            \u0432\u0430\u0442\u0435\u043B\u044F \u0434\u043E\u043B\u0436\u043D\u043E\
            \ \u0431\u044B\u0442\u044C \u0442\u0430\u043A\u0438\u043C \u0436\u0435\
            ."
          pattern: ^[a-zA-Z0-9._-]+$
          maxLength: 150
          minLength: 4
        email:
          type: string
          format: email
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\
            \u0435\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\
            \u0439 \u043F\u043E\u0447\u0442\u044B"
          maxLength: 254
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - email
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\
            \u0435\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\
            \u0439 \u043F\u043E\u0447\u0442\u044B"
          maxLength: 254
      required:
      - new_email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          description: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\
            \u0435\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\
            \u0439 \u043F\u043E\u0447\u0442\u044B"
          maxLength: 254
      required:
      - current_password
      - new_email
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
