# Generated by Django 4.2.20 on 2025-08-20 08:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AVRContractor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_excluded_from_contract', models.BooleanField(verbose_name='Исключен из договора')),
                ('contractor_name', models.CharField(max_length=256, unique=True, verbose_name='Подрядчик')),
            ],
            options={
                'verbose_name': 'подрядчик по АВР',
                'verbose_name_plural': 'Подрядчики по АВР',
            },
        ),
        migrations.CreateModel(
            name='BaseStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bs_name', models.CharField(db_index=True, max_length=256, verbose_name='Имя БС / оборудования')),
            ],
            options={
                'verbose_name': 'базовая станция',
                'verbose_name_plural': 'Базовые станции',
            },
        ),
        migrations.CreateModel(
            name='BaseStationOperator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator_name', models.CharField(max_length=256, verbose_name='Оператор')),
                ('operator_group', models.CharField(blank=True, max_length=256, null=True, verbose_name='Группа операторов')),
            ],
            options={
                'verbose_name': 'оператор БС',
                'verbose_name_plural': 'Операторы на БС',
            },
        ),
        migrations.CreateModel(
            name='ContractorEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, max_length=32, unique=True, verbose_name='email')),
            ],
            options={
                'verbose_name': 'Email подрядчика',
                'verbose_name_plural': 'Email подрядчиков',
            },
        ),
        migrations.CreateModel(
            name='ContractorPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(db_index=True, max_length=16, unique=True, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Телефон подрядчика',
                'verbose_name_plural': 'Телефоны подрядчиков',
            },
        ),
        migrations.CreateModel(
            name='Pole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.IntegerField(unique=True, verbose_name='ID опоры в TS')),
                ('pole', models.CharField(db_index=True, max_length=32, verbose_name='Шифр опоры')),
                ('bs_name', models.CharField(db_index=True, max_length=256, verbose_name='Базовая станция')),
                ('pole_status', models.CharField(blank=True, max_length=256, null=True, verbose_name='Статус опоры')),
                ('pole_latitude', models.FloatField(blank=True, null=True, verbose_name='Широта опоры')),
                ('pole_longtitude', models.FloatField(blank=True, null=True, verbose_name='Долгота опоры')),
                ('pole_height', models.FloatField(blank=True, null=True, verbose_name='Высота опоры')),
                ('region', models.CharField(blank=True, max_length=256, null=True, verbose_name='Регион')),
                ('address', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Адрес')),
                ('infrastructure_company', models.CharField(blank=True, max_length=256, null=True, verbose_name='Инфраструктурная компания')),
                ('anchor_operator', models.CharField(blank=True, max_length=256, null=True, verbose_name='Якорный оператор')),
                ('avr_contractor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='poles', to='ts.avrcontractor', verbose_name='Подрядчик по АВР')),
            ],
            options={
                'verbose_name': 'опора TS',
                'verbose_name_plural': 'Опоры TowerStore',
            },
        ),
        migrations.AddConstraint(
            model_name='basestationoperator',
            constraint=models.UniqueConstraint(fields=('operator_name', 'operator_group'), name='unique_operator_ts'),
        ),
        migrations.AddField(
            model_name='basestation',
            name='operator',
            field=models.ManyToManyField(related_name='base_stations', to='ts.basestationoperator', verbose_name='Операторы'),
        ),
        migrations.AddField(
            model_name='basestation',
            name='pole',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_stations', to='ts.pole', verbose_name='Связанная опора'),
        ),
        migrations.AddField(
            model_name='avrcontractor',
            name='emails',
            field=models.ManyToManyField(blank=True, related_name='contractors', to='ts.contractoremail', verbose_name='Emails'),
        ),
        migrations.AddField(
            model_name='avrcontractor',
            name='phones',
            field=models.ManyToManyField(blank=True, related_name='contractors', to='ts.contractorphone', verbose_name='Телефоны'),
        ),
        migrations.AddConstraint(
            model_name='pole',
            constraint=models.UniqueConstraint(fields=('pole', 'bs_name'), name='unique_pole_ts'),
        ),
        migrations.AddConstraint(
            model_name='basestation',
            constraint=models.UniqueConstraint(fields=('pole', 'bs_name'), name='unique_base_station_ts'),
        ),
    ]
